@page "/boards/{boardId}"

@using Card = RetroBoard.Shared.Models.Card
@using Size = MudBlazor.Size


<PageTitle>@_board.Name Board</PageTitle>

<div class="d-flex justify-content-sm-between ml-5 mr-5 mb-5 align-items-center">
    <BoardHeader BoardName="@_board.Name" />
    <div style="width: 400px; height: 80px" class="d-flex justify-content-center align-items-start">
        <MudTextField
            Margin="Margin.Dense"
            Clearable="true"
            Immediate="true"
            FullWidth="false"
            Variant="Variant.Filled"
            Label="Column name"
            @bind-Value="_newColumnName"
            Style="font-size: x-large; margin-right: 5px; border-radius: 5px"
            Required="true"
            RequiredError="Column name can't be empty"/>
        <MudFab
            Color="Color.Secondary"
            StartIcon="@Icons.Material.Rounded.Add"
            @onclick="@(_newColumnName.IsNullOrEmpty() ? () => {} : CreateColumn)"
            Size="Size.Medium"
            Class="mt-2"/>
    </div>
</div>

<div class="w-auto h-auto" style="overflow-x: visible; overflow-y: hidden">
    <MudDropContainer
        T="Card"
        Items="@_board.Columns.SelectMany(x => x.Cards)"
        ItemsSelector="@((card, columnId) => card.ColumnId == columnId)"
        ItemDropped="ItemDropped">
        <ChildContent>
            <div style="display: grid; grid-auto-flow: column; grid-template-columns: repeat(auto-fit, minmax(auto, 1fr));">
                @foreach (var column in _board.Columns)
                {
                    <ColumnComponent Column="@column"/>
                }
            </div>
        </ChildContent>
    </MudDropContainer>
</div>